services:

  redis:
    image: "ghcr.io/multi-repo/redis/redis:main"
    container_name: redis
    environment:
      TZ: "Europe/Omsk"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - app
    logging:
      driver: "json-file" 
      options:
        max-size: "1m"  
        max-file: "3" 
    mem_limit: 2G
    cpus: 4.0

  postgres:
    image: "ghcr.io/multi-repo/postgres/pg:main"
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USERNAME: ${DATABASE_USERNAME}
      POSTGRES_DB: "${DATABASE_NAME}"
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGDATA: ${PGDATA}
      PGPORT: ${DATABASE_PORT}
      TZ: "Europe/Omsk"
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    container_name: "postgres"
    volumes:
      - pg_data:${PGDATA}
    networks:
      - app 
    logging:
      driver: "json-file" 
      options:
        max-size: "1m"  
        max-file: "3" 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DATABASE_USERNAME"]
      interval: 30s
      timeout: 10s
      retries: 5        
      start_period: 5s
    mem_limit: 2G
    cpus: 4.0
  

  nestjs:
    build:
      context: .
      dockerfile: Dockerfile
    image: "nestjs-api:latest"
    env_file:
      - prod.env
    environment:
      TZ: "Europe/Omsk"
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"  
    depends_on:
      - postgres
      - redis 
    container_name: "nestjs-app"
    networks:
      - app
    restart: always
    
    logging:
      driver: "json-file" 
      options:
        max-size: "1m"  
        max-file: "3" 
    mem_limit: 2G
    cpus: 4.0
    sysctls:
      net.core.somaxconn: 1024
      net.ipv4.tcp_syncookies: 1


volumes:
  pg_data:

networks:
  app:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.100.0/24
